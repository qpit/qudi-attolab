#  Example Qudi configuration file.
#
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
    mynicard:
        module.Class: 'national_instruments_x_series.NationalInstrumentsXSeries'
        clock_channel: '/Dev1/Ctr0'
        counter_channels: ['/Dev1/Ctr1', '/Dev1/Ctr3']
        scanner_clock_channel: '/Dev1/Ctr2'
        scanner_counter_channels: ['/Dev1/Ctr3']
        photon_sources: ['/Dev1/PFI8', '/Dev1/PFI5']
        counting_edge_rising: True
        gate_in_channel: '/Dev1/PFI9'
        strain_gauge_ai_channels: []
        odmr_trigger_channel: '/Dev1/PFI12'
        scanner_position_ranges: [[0, 30e-6], [0, 30e-6], [0, 30e-6]]
        scanner_voltage_ranges: [[0, 10], [0, 10], [0, 10]]
        scanner_ao_channels: ['/Dev1/AO1', '/Dev1/AO0', '/Dev1/AO2']
        default_clock_frequency: 100
        default_scanner_clock_frequency: 100
        default_samples_number: 10

    andor:
        module.Class: 'spectrometer.andor.Andor'
        remote: 'rpyc://10.54.11.250:505/andor'

    shamrock:
        module.Class: 'spectrometer.shamrock.Shamrock'
        remote: 'rpyc://10.54.11.250:505/shamrock'

    mynicounter:
        module.Class: 'slow_counter_dummy.SlowCounterDummy'
        clock_channel: '/Dev1/Ctr0'
        clock_frequency: 100
        counter_channel: '/Dev1/Ctr1'
        photon_source: '/Dev1/PFI13'
        count_distribution: 'dark_bright_poisson'
        remoteaccess: True


    keysightscope:
        module.Class: 'scope_keysight3024T.Scope3024T'

logic:

    andor_spectrometer:
        module.Class: 'interfuse.andor_spectrometer_interfuse.AndorSpectrometerInterfuse'
        connect:
            andor_cam: 'andor'
            shamrock_spectrometer: 'shamrock'

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'mynicard'
            savelogic: 'savelogic'

    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            savelogic: 'savelogic'

    spectroscannerlogic:
        module.Class: 'spectro_confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            savelogic: 'savelogic'
            andorcamera: 'andor'
            shamrock: 'shamrock'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'mynicard'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'mynicard'
            fitlogic: 'fitlogic'

    poimanagerlogic:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scannerlogic'
            optimizer1: 'optimizerlogic'
            savelogic: 'savelogic'

    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
        #    dummytask:
        #        module: 'dummy'
        #        preposttasks: ['ppdummy']
        #    dummyinterruptor:
        #        module: 'dummy'
        #        pausetasks: ['dummytask']
        #        preposttasks: ['ppdummy2']
        #    ppdummy:
        #        module: 'prepostdummy'
        #    ppdummy2:
        #        module: 'prepostdummy'
            scannerLocationRefocus:
                module: 'refocus'
        #        preposttasks: ['fliplasermirror']
                pausetasks: ['scan', 'odmr']
        #        needsmodules:
        #            optimizer: 'optimizerlogic'
        #        config:
        #            initial: [1, 1, 1]
        #    fliplasermirror:
        #        module: 'flipmirror'
        #        needsmodules:
        #            switchlogic: 'switch'
        #        config:
        #            sequence: [('mydummyswitch1', 1, True), ('mydummyswitch1', 2, True), ('mydummyswitch2', 1, True)]

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True

gui:

    counter:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    confocal:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02
